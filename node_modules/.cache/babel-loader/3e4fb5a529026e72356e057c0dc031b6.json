{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function usePaginatedTransactions() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n  const fetchAll = useCallback(async () => {\n    console.log(\"paginatedTransactions.nextPage\");\n    console.log(paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.nextPage);\n    const response = await fetchWithCache(\"paginatedTransactions\", {\n      page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage\n    });\n    setPaginatedTransactions(previousResponse => {\n      if (response === null || previousResponse === null) {\n        console.log(\"yo null\");\n        return response;\n      }\n\n      if (previousResponse !== null && previousResponse !== void 0 && previousResponse.data && response !== null && response !== void 0 && response.data && response !== null && response !== void 0 && response.nextPage) {\n        console.log(\" response?.nextPage:: \" + (response === null || response === void 0 ? void 0 : response.nextPage));\n        return {\n          data: previousResponse === null || previousResponse === void 0 ? void 0 : previousResponse.data.concat(response.data),\n          nextPage: response.nextPage\n        };\n      }\n\n      return {\n        data: response.data,\n        nextPage: response.nextPage\n      };\n    });\n  }, [fetchWithCache, paginatedTransactions]);\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n  return {\n    data: paginatedTransactions,\n    loading,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(usePaginatedTransactions, \"5C7xQHueO9nKLl+7c12EAAA+DoA=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","usePaginatedTransactions","fetchWithCache","loading","paginatedTransactions","setPaginatedTransactions","fetchAll","console","log","nextPage","response","page","previousResponse","data","concat","invalidateData"],"sources":["/project/Ramp/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\"\nimport { PaginatedTransactionsResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\n\nexport function usePaginatedTransactions(): PaginatedTransactionsResult {\n  const { fetchWithCache, loading } = useCustomFetch()\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<\n    Transaction[]\n  > | null>(null)\n\n  const fetchAll = useCallback(async () => {\n    console.log(\"paginatedTransactions.nextPage\")\n    console.log(paginatedTransactions?.nextPage)\n    const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n      \"paginatedTransactions\",\n      {\n        page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage,\n      }\n    )\n\n    setPaginatedTransactions((previousResponse) => {\n      if (response === null || previousResponse === null) {\n        console.log(\"yo null\")\n        return response\n      }\n      if (previousResponse?.data && response?.data && response?.nextPage) {\n        console.log(\" response?.nextPage:: \" + response?.nextPage)\n        return { data: previousResponse?.data.concat(response.data), nextPage: response.nextPage }\n      }\n\n      return { data: response.data, nextPage: response.nextPage }\n    })\n  }, [fetchWithCache, paginatedTransactions])\n\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null)\n  }, [])\n\n  return { data: paginatedTransactions, loading, fetchAll, invalidateData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,wBAAT,GAAiE;EAAA;;EACtE,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA8BH,cAAc,EAAlD;EACA,MAAM,CAACI,qBAAD,EAAwBC,wBAAxB,IAAoDN,QAAQ,CAExD,IAFwD,CAAlE;EAIA,MAAMO,QAAQ,GAAGR,WAAW,CAAC,YAAY;IACvCS,OAAO,CAACC,GAAR,CAAY,gCAAZ;IACAD,OAAO,CAACC,GAAR,CAAYJ,qBAAZ,aAAYA,qBAAZ,uBAAYA,qBAAqB,CAAEK,QAAnC;IACA,MAAMC,QAAQ,GAAG,MAAMR,cAAc,CACnC,uBADmC,EAEnC;MACES,IAAI,EAAEP,qBAAqB,KAAK,IAA1B,GAAiC,CAAjC,GAAqCA,qBAAqB,CAACK;IADnE,CAFmC,CAArC;IAOAJ,wBAAwB,CAAEO,gBAAD,IAAsB;MAC7C,IAAIF,QAAQ,KAAK,IAAb,IAAqBE,gBAAgB,KAAK,IAA9C,EAAoD;QAClDL,OAAO,CAACC,GAAR,CAAY,SAAZ;QACA,OAAOE,QAAP;MACD;;MACD,IAAIE,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,IAAAA,gBAAgB,CAAEC,IAAlB,IAA0BH,QAA1B,aAA0BA,QAA1B,eAA0BA,QAAQ,CAAEG,IAApC,IAA4CH,QAA5C,aAA4CA,QAA5C,eAA4CA,QAAQ,CAAED,QAA1D,EAAoE;QAClEF,OAAO,CAACC,GAAR,CAAY,4BAA2BE,QAA3B,aAA2BA,QAA3B,uBAA2BA,QAAQ,CAAED,QAArC,CAAZ;QACA,OAAO;UAAEI,IAAI,EAAED,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAEC,IAAlB,CAAuBC,MAAvB,CAA8BJ,QAAQ,CAACG,IAAvC,CAAR;UAAsDJ,QAAQ,EAAEC,QAAQ,CAACD;QAAzE,CAAP;MACD;;MAED,OAAO;QAAEI,IAAI,EAAEH,QAAQ,CAACG,IAAjB;QAAuBJ,QAAQ,EAAEC,QAAQ,CAACD;MAA1C,CAAP;IACD,CAXuB,CAAxB;EAYD,CAtB2B,EAsBzB,CAACP,cAAD,EAAiBE,qBAAjB,CAtByB,CAA5B;EAwBA,MAAMW,cAAc,GAAGjB,WAAW,CAAC,MAAM;IACvCO,wBAAwB,CAAC,IAAD,CAAxB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEQ,IAAI,EAAET,qBAAR;IAA+BD,OAA/B;IAAwCG,QAAxC;IAAkDS;EAAlD,CAAP;AACD;;GAnCed,wB;UACsBD,c"},"metadata":{},"sourceType":"module"}
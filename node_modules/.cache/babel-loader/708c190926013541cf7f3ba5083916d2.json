{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function usePaginatedTransactions() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n  const fetchAll = useCallback(async () => {\n    const response = await fetchWithCache(\"paginatedTransactions\", {\n      page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage\n    });\n    setPaginatedTransactions(previousResponse => {\n      if (response === null || previousResponse === null) {\n        return response;\n      }\n\n      if (previousResponse !== null && previousResponse !== void 0 && previousResponse.data && response !== null && response !== void 0 && response.data && response.nextPage) {\n        return {\n          data: previousResponse === null || previousResponse === void 0 ? void 0 : previousResponse.data.concat(response.data),\n          nextPage: response.nextPage\n        };\n      }\n\n      console.log(\"previousResponse.data\");\n      console.log(previousResponse.data);\n      console.log(\"response.data\");\n      console.log(response.data);\n      console.log(\"response.nextPage\");\n      console.log(response === null || response === void 0 ? void 0 : response.nextPage);\n      return {\n        data: response.data,\n        nextPage: response.nextPage\n      };\n    });\n  }, [fetchWithCache, paginatedTransactions]);\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n  return {\n    data: paginatedTransactions,\n    loading,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(usePaginatedTransactions, \"5C7xQHueO9nKLl+7c12EAAA+DoA=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","usePaginatedTransactions","fetchWithCache","loading","paginatedTransactions","setPaginatedTransactions","fetchAll","response","page","nextPage","previousResponse","data","concat","console","log","invalidateData"],"sources":["/project/Ramp/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\"\nimport { PaginatedTransactionsResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\n\nexport function usePaginatedTransactions(): PaginatedTransactionsResult {\n  const { fetchWithCache, loading } = useCustomFetch()\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<\n    Transaction[]\n  > | null>(null)\n\n  const fetchAll = useCallback(async () => {\n    const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n      \"paginatedTransactions\",\n      {\n        page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage,\n      }\n    )\n\n    setPaginatedTransactions((previousResponse) => {\n      if (response === null || previousResponse === null) {\n        return response\n      }\n      if (previousResponse?.data && response?.data && response.nextPage) {\n        return { data: previousResponse?.data.concat(response.data), nextPage: response.nextPage }\n      }\n      console.log(\"previousResponse.data\")\n      console.log(previousResponse.data)\n      console.log(\"response.data\")\n      console.log(response.data)\n      console.log(\"response.nextPage\")\n      console.log(response?.nextPage)\n\n      return { data: response.data, nextPage: response.nextPage }\n    })\n  }, [fetchWithCache, paginatedTransactions])\n\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null)\n  }, [])\n\n  return { data: paginatedTransactions, loading, fetchAll, invalidateData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,wBAAT,GAAiE;EAAA;;EACtE,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA8BH,cAAc,EAAlD;EACA,MAAM,CAACI,qBAAD,EAAwBC,wBAAxB,IAAoDN,QAAQ,CAExD,IAFwD,CAAlE;EAIA,MAAMO,QAAQ,GAAGR,WAAW,CAAC,YAAY;IACvC,MAAMS,QAAQ,GAAG,MAAML,cAAc,CACnC,uBADmC,EAEnC;MACEM,IAAI,EAAEJ,qBAAqB,KAAK,IAA1B,GAAiC,CAAjC,GAAqCA,qBAAqB,CAACK;IADnE,CAFmC,CAArC;IAOAJ,wBAAwB,CAAEK,gBAAD,IAAsB;MAC7C,IAAIH,QAAQ,KAAK,IAAb,IAAqBG,gBAAgB,KAAK,IAA9C,EAAoD;QAClD,OAAOH,QAAP;MACD;;MACD,IAAIG,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,IAAAA,gBAAgB,CAAEC,IAAlB,IAA0BJ,QAA1B,aAA0BA,QAA1B,eAA0BA,QAAQ,CAAEI,IAApC,IAA4CJ,QAAQ,CAACE,QAAzD,EAAmE;QACjE,OAAO;UAAEE,IAAI,EAAED,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAEC,IAAlB,CAAuBC,MAAvB,CAA8BL,QAAQ,CAACI,IAAvC,CAAR;UAAsDF,QAAQ,EAAEF,QAAQ,CAACE;QAAzE,CAAP;MACD;;MACDI,OAAO,CAACC,GAAR,CAAY,uBAAZ;MACAD,OAAO,CAACC,GAAR,CAAYJ,gBAAgB,CAACC,IAA7B;MACAE,OAAO,CAACC,GAAR,CAAY,eAAZ;MACAD,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACI,IAArB;MACAE,OAAO,CAACC,GAAR,CAAY,mBAAZ;MACAD,OAAO,CAACC,GAAR,CAAYP,QAAZ,aAAYA,QAAZ,uBAAYA,QAAQ,CAAEE,QAAtB;MAEA,OAAO;QAAEE,IAAI,EAAEJ,QAAQ,CAACI,IAAjB;QAAuBF,QAAQ,EAAEF,QAAQ,CAACE;MAA1C,CAAP;IACD,CAfuB,CAAxB;EAgBD,CAxB2B,EAwBzB,CAACP,cAAD,EAAiBE,qBAAjB,CAxByB,CAA5B;EA0BA,MAAMW,cAAc,GAAGjB,WAAW,CAAC,MAAM;IACvCO,wBAAwB,CAAC,IAAD,CAAxB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEM,IAAI,EAAEP,qBAAR;IAA+BD,OAA/B;IAAwCG,QAAxC;IAAkDS;EAAlD,CAAP;AACD;;GArCed,wB;UACsBD,c"},"metadata":{},"sourceType":"module"}